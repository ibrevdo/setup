
set hidden
set nohlsearch
set ignorecase smartcase
set tabstop=4 softtabstop=4 shiftwidth=4 expandtab
set smarttab
set autoindent smartindent
set path=.,,**
set complete-=i
set pumheight=15
set updatetime=400
set wildmenu wildignorecase
set wildignore+=*.o,*.pyc,*.so,*.mht,*/.git/*,*/.cache/*,*/build/*
set wildmode=list:lastused,full
"set tags=./tags;,tags;./.tags;,.tags;
set tags=./tags;,./.tags;   "the semicolon tells to search parent dirs also
set noswapfile nobackup noundofile
set nu
"set nu rnu
"set signcolumn=number
"set ttymouse=xterm2    "seems like not needed anymore
set mouse=a 
set completeopt=menu
"set completeopt=longest,menuone "default: menu,preview
set clipboard=unnamedplus	"use system clipboard


set laststatus=2
set statusline=%f%m%=
"set statusline+=\ %y\ Col:%2c\ %3l\/%L\ %2P
set statusline+=%c%V\ %y\ %2P\ %L
"set rulerformat=%m\ %l,%c%V%=%P

set linebreak
set showbreak=>>

" autocmd FileType markdown,text setlocal complete+=k/usr/share/dict/words
" autocmd FileType markdown   set spell spelllang=en_us     "en_us,de_de

" for preservim/vim-markdown
autocmd FileType markdown set conceallevel=2 
            \ sidescroll=1 listchars+=extends:>,precedes:<
            \ sidescrolloff=1

" start with nofoldenable. if needed, use zi
set nofoldenable
"set foldcolumn=1 
set foldmethod=indent foldlevelstart=99 foldnestmax=3
au filetype c,cpp,python   setlocal foldmethod=syntax foldnestmax=1 foldlevel=1 foldcolumn=1

" set fillchars=vert:â”ƒ
set diffopt+=vertical

highlight Pmenu ctermbg=gray guibg=gray
highlight PmenuSel cterm=bold ctermbg=lightgray gui=bold guibg=lightgray

if (has("termguicolors"))
  " https://github.com/vim/vim/issues/993#issuecomment-255651605
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"

  set termguicolors
endif

if executable('ag')
  set grepprg=ag\ --nogroup\ --nocolor\ --vimgrep
  set grepformat^=%f:%l:%c:%m
else
  set grepprg=LC_ALL=C\ grep\ -nrsH
endif

" press enter to choose the selection from completion menu
"inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"

let mapleader=","
let maplocalleader=","

nnoremap Y 	y$

nnoremap    <Space>   za

" better use C-[
" imap jk <Esc>
" imap kj <Esc>

" better keep pressing C-w : it is convinient enough
"navigate around window splits with single key combo
nmap <silent> <C-k> :wincmd k<CR>
nmap <silent> <C-j> :wincmd j<CR>
nmap <silent> <C-h> :wincmd h<CR>
nmap <silent> <C-l> :wincmd l<CR>

"no enter after man page
nnoremap <silent><buffer> K 	K<CR>
vnoremap <silent><buffer> K 	K<CR>


tnoremap <C-[>  <C-\><C-n>

" ---------------------------------------------------------
" plugins config (pre)
" ---------------------------------------------------------
runtime user/start.vim
"runtime user/ale.vim
hi link LspDiagLine NONE
hi link LspDiagVirtualText WarningMsg
runtime user/lsp.vim

" load plugins
"---------------------------------------------------------------
call plug#begin("~/.vim/plugged")
Plug 'junegunn/vim-plug'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-unimpaired'
Plug 'godlygeek/tabular'
Plug 'tmsvg/pear-tree'
Plug 'airblade/vim-gitgutter'

"Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
"Plug 'junegunn/fzf.vim'
Plug 'yegappan/mru'

Plug 'lambdalisue/fern.vim'
Plug 'lambdalisue/fern-hijack.vim'
Plug 'lambdalisue/fern-git-status.vim'
"Plug 'tpope/vim-vinegar'
"Plug 'preservim/nerdtree'
"Plug 'will133/vim-dirdiff'
"Plug 'vifm/vifm.vim'

" Plug 'ackyshake/VimCompletesMe'
" Plug 'ctrlpvim/ctrlp.vim'
" Plug 'ivalkeen/vim-ctrlp-tjump'
" Plug 'preservim/tagbar'
" Plug 'airblade/vim-gitgutter'

Plug 'ludovicchabant/vim-gutentags'
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'
Plug 'vim-scripts/OmniCppComplete'
"Plug 'dense-analysis/ale'
Plug 'lervag/vimtex'
Plug 'yegappan/lsp'

Plug 'romainl/Apprentice'
Plug 'lifepillar/vim-gruvbox8'
Plug 'joshdick/onedark.vim'
Plug 'sheerun/vim-polyglot'
Plug 'srcery-colors/srcery-vim'
Plug 'NLKNguyen/papercolor-theme'

if has("gui_running")
    " Plug 'preservim/vim-markdown' "I use vim-polyglot instead
    Plug 'lifepillar/vim-solarized8'
endif

" Initialize plugin system
" " - Automatically executes `filetype plugin indent on` and `syntax enable`.
call plug#end()

if has("gui_running")
	set background=dark

    "let g:solarized_italics=0
    "let g:solarized_statusline='flat'
    "colorscheme solarized8
    
	"let g:gruvbox_italics = 0
	"colorscheme gruvbox8_hard

    let g:onedark_terminal_italics = 0
    colorscheme onedark

	"set background=light
    "colorscheme PaperColor
    
	set guifont=DejaVu\ Sans\ Mono\ 12
	set lines=40 columns=120
	set guioptions -=m "disable menu
	set guioptions -=T "disable toolbar
	set guioptions -=r "disable right scroll
    set guioptions -=l "disabe left scroll
    set guioptions -=L
	set mouse=a
	"set guicursor+=a:blinkon0
    
else
    set background=dark
    "colorscheme apprentice
    "colorscheme molokai
    "colorscheme srcery

    "let g:solarized_italics=0
    "colorscheme solarized8

    "let g:onedark_terminal_italics = 1
    "colorscheme onedark

    colorscheme PaperColor

endif

" plugins config (post)
"---------------------------------------------------------------
runtime! ftplugin/man.vim
runtime user/plugins.vim
runtime user/fern.vim

" for preservim/nerdtree
" nnoremap \\ :NERDTreeToggle<CR>
" let NERDTreeWinPos = 'right'
" let NERDTreeMouseMode = 2   " single mouse click to reveal folder in NERDTree

"filetype plugin indent on
"syntax enable

"set rulerformat=%m
"set rulerformat+=%#Visual#\ W:\ %{b:num_warnings}\ %*
"set rulerformat+=%#CurSearch#\ E:\ %{b:num_errors}\ %*
"set rulerformat+=%#Visual#\ E:\ %{b:num_errors}\ %*
"set rulerformat+=\ %l,%c%V%=%P
